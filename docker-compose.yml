services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  user_auth_service:
    build: ./user_auth_service
    command: bundle exec rails s -b '0.0.0.0'
    volumes:
      - ./user_auth_service:/app
    ports:
      - "3001:3000"
    depends_on:
      - db
    environment:
      - RAILS_ENV=development
    networks:
      - my_network

  product_service:
    build: ./product_service
    command: bundle exec rails s -b '0.0.0.0'
    volumes:
      - ./product_service:/app
    ports:
      - "3002:3000"
    depends_on:
      - db
      - user_auth_service
    environment:
      - RAILS_ENV=development
      - USER_AUTH_SERVICE_URL=http://user_auth_service:3000
      - USER_AUTH_SERVICE_TOKEN=your_generated_access_token
    networks:
      - my_network

  order_service:
    build: ./order_service
    command: bundle exec rails s -b '0.0.0.0'
    volumes:
      - ./order_service:/app
    ports:
      - "3003:3000"
    depends_on:
      - db
      - user_auth_service
    environment:
      - RAILS_ENV=development
      - USER_AUTH_SERVICE_URL=http://user_auth_service:3000
      - USER_AUTH_SERVICE_TOKEN=your_generated_access_token
    networks:
      - my_network

  api_gateway:
    build: ./api_gateway
    environment:
      - USER_AUTH_SERVICE_URL=http://user_auth_service:3000
      - PRODUCT_SERVICE_URL=http://product_service:3000
      - ORDER_SERVICE_URL=http://order_service:3000
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - user_auth_service
      - product_service
      - order_service
    networks:
      - my_network

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - api_gateway
    networks:
      - my_network

volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge